"use strict";
function replay(stream) {
    if (typeof stream.remember === 'function') {
        return stream.remember();
    }
    if (typeof stream.replay === 'function') {
        var _stream = stream.replay(null, 1);
        _stream.connect();
        return _stream;
    }
    if (typeof stream.publishReplay === 'function') {
        return stream.publishReplay(1);
    }
    if (typeof stream.observe === 'function')
        return mostReplay(stream);
}
exports.replay = replay;
function mostReplay(stream) {
    return new stream.constructor(new Hold(stream.source)).multicast();
}
var Hold = (function () {
    function Hold(source) {
        this.source = source;
        this.time = -Infinity;
        this.value = void 0;
    }
    Hold.prototype.run = function (sink, scheduler) {
        /* istanbul ignore else */
        if (sink._hold !== this) {
            sink._hold = this;
            sink._holdAdd = sink.add;
            sink.add = holdAdd;
            sink._holdEvent = sink.event;
            sink.event = holdEvent;
        }
        return this.source.run(sink, scheduler);
    };
    return Hold;
}());
function holdAdd(sink) {
    var len = this._holdAdd(sink);
    /* istanbul ignore else */
    if (this._hold.time >= 0) {
        sink.event(this._hold.time, this._hold.value);
    }
    return len;
}
function holdEvent(t, x) {
    /* istanbul ignore else */
    if (t >= this._hold.time) {
        this._hold.time = t;
        this._hold.value = x;
    }
    return this._holdEvent(t, x);
}
//# sourceMappingURL=replay.js.map